'use strict';
const quickSort = require('../quickSort.js');

describe('is this less than that?', () => {
    const sorted = [1,2,3,4];
    const simple = [2,3,1];
    const complexSorted = [ 1,2,2.2,3,3,3,4,4,4,4.1,5,5,5.1,6,6,6,6,7.34,9,33,33,45,55,66,66,344,444,534,666,3433,3434,3434,4634 ];
    const reverseSorted =     [ 4634,3434,3434,3433,666,534,444,344,66,66,55,45,33,33,9,7.34,6,6,6,6,5.1,5,5,4.1,4,4,4,3,3,3,2.2,2,1 ];
    const evenLonger = [
        414.10935408767034,   711.740202422731,   850.1276741818323,
        332.71436704818456,  428.2135306168082,   687.4453424597847,
         170.4482198237325,  964.6721050506436,   266.2416354029513,
         956.6082735045156,  642.2547118308574,  406.92943850569486,
         666.4354903117169,  953.6886553897406,  252.36220463370665,
          78.2600072537939, 280.83126140065986,    582.745723262465,
         617.0884963186179,  55.73756757072603,   195.9078749587975,
         764.8443173076404,  651.1104041539555,  475.98029619543996,
         858.3826546111427,  778.4327421109131,   479.8383556035546,
         823.6913879347494, 19.291556669895044,   404.7958967388438,
        371.43680843688577, 510.28235734390626,   32.00215449671242,
         45.17966441657087, -18.52961091930402,   472.7654821992308,
         218.3637468853568,  368.7670417262891,   486.9323400717493,
         580.0064549280838,  604.0068170403414,  381.73751952244476,
        463.19732092265565,  740.1309014421271,  207.00303135377834,
         526.8721274107165,    78.552464937157,   579.9086813441418,
         854.0049988579227,  739.7957764223507,   704.4572270185607,
         616.0153895595363,  510.5849943030139,   786.8725901605114,
         507.9103651789177, 197.31732069967583,   908.6852285286398,
        28.057096389079106, 217.16801900271923,  108.98859495293917,
         349.1634777412523,  81.60380307351238,   809.9888418087432,
        102.42134521745044,  750.7522411341567,  175.40297415251422,
        329.07836486742565, 107.58372754026041,   840.6609636660404,
         201.6605798555621,   726.587276376957,  1.9062091824883538,
         303.2510218560028,  756.3442311520938,   260.8644831683307,
         637.7315064491884,  846.4909617988749,  502.95579306244576,
        345.66875156966177,  555.7979728599789,  288.34759299370677,
        29.927209570705003, 153.88532129978313,    589.065442448287,
        238.02467421118166,  424.1828685945023,  -56.26087729789712,
         656.7678853218994,  709.5392890234465, -0.5957743823965842,
         820.8823778330689, 337.58070983713816,   179.3569113675942,
         632.6044824643051,  711.2869078558494,   786.3834890099603,
        -90.02473214537035,  91.82141283240196,  145.67488161148998,
          296.514180635576
      ];
  
    const moreComplex = [2.2,5.1,2,6,9,4.1,4,5, 1,3,66,33,3,4,45,55,4,7.34, 4634, 344, 534, 3434, 3434,3433,3,33,444,5,6,666,6,6,66];
    it('should return an array with a length of 4', () => {
        expect(quickSort(sorted)).toHaveLength(4);
    });
    it('should return a sorted array when given a sorted array', () => {
        expect(quickSort(sorted)).toStrictEqual([1,2,3,4]);
    });
    it('should return a sorted array when given a longer reverse sorted array', async () => {
        const before = Date.now();
        const reverse = await quickSort(reverseSorted);
        const time = Date.now() - before;
        expect(quickSort(complexSorted)).toStrictEqual(complexSorted);       
    });
    it('should return a sorted array when given a simple unsorted array', () => {
        expect(quickSort(simple)).toStrictEqual([1,2,3]);
    });
    it('should return a sorted array when given a longer array with more complex values', async () => {
        let before = Date.now();
        let keepItSimple = await quickSort(evenLonger);
        let after = Date.now();
        expect(quickSort(evenLonger)).toStrictEqual(     [ -90.02473214537035,
            -56.26087729789712,
            -18.52961091930402,
            -0.5957743823965842,
            1.9062091824883538,
            19.291556669895044,
            28.057096389079106,
            29.927209570705003,
            32.00215449671242,
            45.17966441657087,
            55.73756757072603,
            78.2600072537939,
            78.552464937157,
            81.60380307351238,
            91.82141283240196,
            102.42134521745044,
            107.58372754026041,
            108.98859495293917,
            145.67488161148998,
            153.88532129978313,
            170.4482198237325,
            175.40297415251422,
            179.3569113675942,
            195.9078749587975,
            197.31732069967583,
            201.6605798555621,
            207.00303135377834,
            217.16801900271923,
            218.3637468853568,
            238.02467421118166,
            252.36220463370665,
            260.8644831683307,
            266.2416354029513,
            280.83126140065986,
            288.34759299370677,
            296.514180635576,
            303.2510218560028,
            329.07836486742565,
            332.71436704818456,
            337.58070983713816,
            345.66875156966177,
            349.1634777412523,
            368.7670417262891,
            371.43680843688577,
            381.73751952244476,
            404.7958967388438,
            406.92943850569486,
            414.10935408767034,
            424.1828685945023,
            428.2135306168082,
            463.19732092265565,
            472.7654821992308,
            475.98029619543996,
            479.8383556035546,
            486.9323400717493,
            502.95579306244576,
            507.9103651789177,
            510.28235734390626,
            510.5849943030139,
            526.8721274107165,
            555.7979728599789,
            579.9086813441418,
            580.0064549280838,
            582.745723262465,
            589.065442448287,
            604.0068170403414,
            616.0153895595363,
            617.0884963186179,
            632.6044824643051,
            637.7315064491884,
            642.2547118308574,
            651.1104041539555,
            656.7678853218994,
            666.4354903117169,
            687.4453424597847,
            704.4572270185607,
            709.5392890234465,
            711.2869078558494,
            711.740202422731,
            726.587276376957,
            739.7957764223507,
            740.1309014421271,
            750.7522411341567,
            756.3442311520938,
            764.8443173076404,
            778.4327421109131,
            786.3834890099603,
            786.8725901605114,
            809.9888418087432,
            820.8823778330689,
            823.6913879347494,
            840.6609636660404,
            846.4909617988749,
            850.1276741818323,
            854.0049988579227,
            858.3826546111427,
            908.6852285286398,
            953.6886553897406,
            956.6082735045156,
            964.6721050506436 ]
      
      
      );
    });
});